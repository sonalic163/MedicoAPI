name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up .NET and build the application
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'  # Adjust according to your project's .NET version

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build

      # Publish the app for deployment and upload the artifact
      - name: Publish project
        run: dotnet publish -c Release -o ./publish

      - name: Upload publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: publish  # Name used for the artifact
          path: ./publish  # Upload the 'publish' directory

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job completes before deployment

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Download the publish artifact uploaded in the build job
      - name: Download publish artifact
        uses: actions/download-artifact@v3
        with:
          name: publish  # Match the artifact name from the upload step
          path: ./publish  # Path where the artifact will be downloaded

      - name: Add SSH host to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Set up SSH key for deployment
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy to server
        env:
          HOST: 65.0.21.113
          USER: ubuntu
          PRIVATE_KEY: ${{ secrets.MEDICO_KEY }}
        run: |
          # Upload the publish folder
          scp -i private_key.pem -r ./publish $USER@$HOST:/home/ubuntu/api-deploy/

          # Restart the Kestrel API service after deployment
          ssh -i private_key.pem $USER@$HOST << EOF
            cd /home/ubuntu/api-deploy
            sudo systemctl restart kestrel-api
          EOF
